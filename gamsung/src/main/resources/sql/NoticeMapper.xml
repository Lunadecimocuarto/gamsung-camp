<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="NoticeMapper">

	<resultMap id="noticeDomain" type="notice">
		<result property="noticeNo"      column="notice_no" 	 jdbcType="NUMERIC"/>
		<result property="writer.id"     column="user_id" 		 jdbcType="VARCHAR"/>
		<result property="deleteFlag"    column="delete_flag" 	 jdbcType="CHAR"/>
		<result property="noticeTitle"   column="notice_title"   jdbcType="VARCHAR"/>
		<result property="noticeContent" column="notice_content" jdbcType="VARCHAR"/>
		<result property="viewCount"     column="view_count" 	 jdbcType="NUMERIC"/>
		<result property="regDate" 		 column="reg_date" 	     jdbcType="VARCHAR"/>
		<result property="campNo" 		 column="camp_no" 	     jdbcType="NUMERIC"/>
		<result property="campName" 	 column="camp_name" 	 jdbcType="VARCHAR"/>
		<result property="noticeFile1" 	 column="notice_file1" 	 jdbcType="VARCHAR"/>
		<result property="noticeFile2" 	 column="notice_file1" 	 jdbcType="VARCHAR"/>
		<result property="noticeFile3" 	 column="notice_file1" 	 jdbcType="VARCHAR"/>
		
		<association property="writer" javaType="user">
		      <id property="id"						       column="user_id"                    jdbcType="VARCHAR"/>
		      <result property="role"  					   column="role"                       jdbcType="VARCHAR" />
		      <result property="nickName"                  column="nick_name"                  jdbcType="VARCHAR" />
		      <result property="password"                  column="password"                   jdbcType="VARCHAR" />
		      <result property="name"                      column="name"                       jdbcType="VARCHAR" />
		      <result property="phone"                     column="phone"                      jdbcType="VARCHAR" />
		      <result property="addr"                      column="addr"                       jdbcType="VARCHAR" />
		      <result property="addUserRegDate"            column="entry_reg_date"             jdbcType="DATE"  />
		      <result property="bank"                      column="bank"                       jdbcType="VARCHAR" />
		      <result property="accountHolder"             column="account_holder"             jdbcType="VARCHAR" />
		      <result property="accountNum"                column="account_num"                jdbcType="VARCHAR" />
		      <result property="havingPoint"               column="having_point"               jdbcType="NUMERIC" />
		      <result property="campName"                  column="camp_name"                  jdbcType="VARCHAR" />
		      <result property="campCall" 				   column="camp_call"                  jdbcType="VARCHAR" />
		      <result property="businessUserApprovalFlag"  column="entry_approval_flag"        jdbcType="CHAR" />
		      <result property="countCancelReceive" 	   column="receive_cancel_total_count" jdbcType="NUMERIC" />
		      <result property="receiveProhibitionEndDate" column="receive_ban_end_date"       jdbcType="DATE" />
		      <result property="dormantConversionDate"     column="dormant_reg_date"           jdbcType="DATE" />
		      <result property="secessionRegDate"          column="secession_reg_date"         jdbcType="DATE" />
		      <result property="suspensionDate"            column="suspension_reg_date"        jdbcType="DATE" />
		      <result property="tourismBusinessNum"        column="tourism_business_num"       jdbcType="VARCHAR" />
		      <result property="suspensionContent"         column="suspension_content"         jdbcType="VARCHAR" />
		      <result property="auctionGrade"              column="auction_grade"              jdbcType="SMALLINT" />
		   </association>
	</resultMap>
	
	<insert id="addNotice" parameterType="notice">
		INSERT INTO notice (user_id, notice_title, notice_content, notice_file1, notice_file2,notice_file3)
		VALUE (#{writer.id}, #{noticeTitle:VARCHAR}, #{noticeContent:VARCHAR}, #{noticeFile1:VARCHAR},#{noticeFile2:VARCHAR},#{noticeFile3:VARCHAR})
	</insert>
	
	<select id="getNotice"	parameterType="_int" resultMap="noticeDomain">
		SELECT * 
		FROM notice AS n JOIN users AS u
		ON n.user_id = u.user_id 
		WHERE n.notice_no = #{value};
	</select>
	
	<select id="listNotice"	parameterType="search" resultMap="noticeDomain">
		SELECT<![CDATA[@rownum:=@rownum+1 rownum]]>, notice.*
		FROM ( 	SELECT 	n.notice_no, n.user_id, n.delete_flag, n.notice_title, n.notice_content, n.view_count, n.reg_date, n.camp_no, n.camp_name, n.notice_file1, n.notice_file2, n.notice_file3,
						u.role, u.nick_name, u.password, u.name, u.addr, u.phone, u.entry_reg_date, u.bank, u.account_holder, u.account_num, u.having_point, u.camp_call, u.entry_approval_flag, u.receive_cancel_total_count, u.receive_ban_end_date, u.dormant_reg_date, u.secession_reg_date, u.suspension_reg_date, u.tourism_business_num, u.suspension_content, u.auction_grade
				FROM notice n JOIN users u
				ON n.user_id = u.user_id
				<if test="searchCondition != null">
					<where>
						<!-- 제목 + 내용 -->
						<if test="searchCondition == 0 and searchKeyword !='' ">
							AND MATCH (notice_title,notice_content) against ((concat_ws(#{searchKeyword},'*','*') in boolean mode)
						</if>
						<!-- 제목 -->
						<if test="searchCondition == 1 and searchKeyword !='' ">
							AND MATCH (notice_title) against ((concat_ws(#{searchKeyword},'*','*') in boolean mode)
						</if>
						<!-- 내용 -->
						<if test="searchCondition == 2 and searchKeyword !='' ">
							AND MATCH (notice_content) against ((concat_ws(#{searchKeyword},'*','*') in boolean mode)
						</if>
					
					</where>
				</if>
				ORDER BY n.reg_date ) notice , (SELECT<![CDATA[@rownum:=0]]>) r
		LIMIT #{startRowNum} , #{pageSize}

	</select>
	
</mapper>